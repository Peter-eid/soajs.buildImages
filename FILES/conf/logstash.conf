input {
	beats {
		port => 12201
	}
}

filter {
	if [type] == "nginx-access" {
		grok {
			match => ['message', '%{WORD:soajs_env} %{IPORHOST:http_host} %{IPORHOST:clientip} \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent} %{NUMBER:request_time:float}',
				      'message', '%{WORD:soajs_env} %{IPORHOST:http_host} %{IPORHOST:clientip} \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent} %{NUMBER:request_time:float} %{NUMBER:upstream_time:float}'
			]
		}
		date {
			match => ["timestamp", "dd/MMM/YYYY:HH:mm:ss Z"]
		}
		geoip {
			source => "clientip"
			target => "geoip"
		}
		useragent {
			source => "agent"
			target => "user_agent"
		}
	}
	if [type] == "service-logs" {
	grok {
		match => ['message','%{IPORHOST:clientip} \- \- \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent}']
	}
	if "_grokparsefailure" in [tags] {
 	 	drop {}
	}
	date {
		match => ["timestamp", "dd/MMM/YYYY:HH:mm:ss Z"]
	}
	useragent {
		source => "agent"
		target => "user_agent"
	  }
   }
}

output {
	elasticsearch {
		hosts => "${SOAJS_ELASTIC_EXTERNAL_URL:elasticsearch}:9200"
		index => "%{soajs_env}-%{type}-%{+YYYY.MM.dd}"
		document_type => "%{[@metadata][type]}"
	}
}
